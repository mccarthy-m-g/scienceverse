{
    "name": "Distinguishing Apathy from Depression",
    "info": {
        "author": [
            "Daniel Lakens",
            "Lisa DeBruine"
        ]
    },
    "hypotheses": [
        {
            "id": "H1",
            "description": "The correlation between the apathy and depression scale is smaller than 0.3",
            "criteria": [
                {
                    "hypothesis_id": "H1",
                    "analysis_id": "main_analysis",
                    "result": "TOST_p2",
                    "operator": "<",
                    "comparator": 0.01
                }
            ],
            "evaluation": "&"
        }
    ],
    "methods": [],
    "data": [],
    "prep": {
        "params": {
            "raw_data": ".data[apathy_depression_raw]"
        },
        "code": [
            "suppressPackageStartupMessages( library(tidyverse) )",
            "",
            "#raw_data <- read_csv(\"apathy_depression_raw.csv\")",
            "",
            "processed_data <- raw_data %>%",
            "  gather(key, val, a1:d5) %>%",
            "  separate(key, \"q\", 1, extra = \"drop\") %>%",
            "  group_by(sub_id, q) %>%",
            "  summarise(val = mean(val)) %>%",
            "  spread(q, val) %>%",
            "  rename(apathy = a, depression = d)"
        ],
        "return": "processed_data"
    },
    "analyses": [
        {
            "id": "main_analysis",
            "func": "eq_test_r",
            "params": {
                "data": ".data[processed_data]",
                "col1": "apathy",
                "col2": "depression",
                "alpha": 0.05,
                "high_eqbound_r": 0.3,
                "low_eqbound_r": -0.3
            },
            "code": [
                "function (data, col1 = \"\", col2 = \"\", alpha = alpha, high_eqbound_r = high_eqbound_r, ",
                "    low_eqbound_r = low_eqbound_r) ",
                "{",
                "    x <- data[[col1]]",
                "    y <- data[[col2]]",
                "    r <- cor(x, y)",
                "    n <- length(x)",
                "    test_res <- TOSTER::TOSTr(n = n, r = r, high_eqbound_r = high_eqbound_r, ",
                "        low_eqbound_r = low_eqbound_r, alpha = alpha, plot = FALSE, ",
                "        verbose = FALSE)",
                "    invisible(test_res)",
                "}"
            ]
        }
    ]
}

